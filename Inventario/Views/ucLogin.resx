<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +AWV8n/fsT0/u2kujAAAAABJRU5ErkJggg==
</value>
  </data>
</root>