<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Numero_Serie.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Nombre.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Proveedor.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Categoria.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Precio.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CantidadExistencia.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>