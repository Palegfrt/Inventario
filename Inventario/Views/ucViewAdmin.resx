<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Numero_Serie.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Nombre.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Proveedor.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Categoria.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Precio.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CantidadExistencia.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>