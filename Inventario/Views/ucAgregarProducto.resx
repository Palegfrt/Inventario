<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GNEyAAAAAElFTkSuQmCC
</value>
  </data>
</root>